// <auto-generated />
using System;
using MenuGenerator.Models.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MenuGenerator.Models.Database.Migrations
{
    [DbContext(typeof(MenuGeneratorContext))]
    [Migration("20251008191502_AddedMenuGeneratorTemplateEntityAndDependentEntities")]
    partial class AddedMenuGeneratorTemplateEntityAndDependentEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("AllergenEntityDishEntity", b =>
                {
                    b.Property<Guid>("AllergenListId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DishListId")
                        .HasColumnType("TEXT");

                    b.HasKey("AllergenListId", "DishListId");

                    b.HasIndex("DishListId");

                    b.ToTable("AllergenEntityDishEntity");
                });

            modelBuilder.Entity("DishAttributeEntityDishEntity", b =>
                {
                    b.Property<Guid>("AttributeListId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DishListId")
                        .HasColumnType("TEXT");

                    b.HasKey("AttributeListId", "DishListId");

                    b.HasIndex("DishListId");

                    b.ToTable("DishAttributeEntityDishEntity");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.Allergen.AllergenEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("DisplayId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DisplayId")
                        .IsUnique();

                    b.ToTable("Allergens");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.Dish.DishEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<bool>("IncludeInNewMenus")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("TypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("Dishes");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.DishAttribute.DishAttributeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DishAttributes");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.DishType.DishTypeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("DishTypes");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.DayMenuDishEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("DayMenuTemplateEntityId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DishFilterId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DishTypeId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DayMenuTemplateEntityId");

                    b.HasIndex("DishFilterId");

                    b.HasIndex("DishTypeId");

                    b.ToTable("DayMenuDishEntity");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.DayMenuTemplateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("TemplateDays")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("DayMenuTemplateEntity");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.Filters.DishFilterEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DishFilterEntity");

                    b.HasDiscriminator().HasValue("DishFilterEntity");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.MenuGeneratorTemplateEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("MenuGeneratorTemplates");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.Filters.DishFilterTrueEntity", b =>
                {
                    b.HasBaseType("MenuGenerator.Models.Entities.MenuTemplate.Filters.DishFilterEntity");

                    b.HasDiscriminator().HasValue("DishFilterTrueEntity");
                });

            modelBuilder.Entity("AllergenEntityDishEntity", b =>
                {
                    b.HasOne("MenuGenerator.Models.Entities.Allergen.AllergenEntity", null)
                        .WithMany()
                        .HasForeignKey("AllergenListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuGenerator.Models.Entities.Dish.DishEntity", null)
                        .WithMany()
                        .HasForeignKey("DishListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DishAttributeEntityDishEntity", b =>
                {
                    b.HasOne("MenuGenerator.Models.Entities.DishAttribute.DishAttributeEntity", null)
                        .WithMany()
                        .HasForeignKey("AttributeListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuGenerator.Models.Entities.Dish.DishEntity", null)
                        .WithMany()
                        .HasForeignKey("DishListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.Dish.DishEntity", b =>
                {
                    b.HasOne("MenuGenerator.Models.Entities.DishType.DishTypeEntity", "Type")
                        .WithMany("DishList")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.DayMenuDishEntity", b =>
                {
                    b.HasOne("MenuGenerator.Models.Entities.MenuTemplate.DayMenuTemplateEntity", null)
                        .WithMany("DishTypeList")
                        .HasForeignKey("DayMenuTemplateEntityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MenuGenerator.Models.Entities.MenuTemplate.Filters.DishFilterEntity", "DishFilter")
                        .WithMany()
                        .HasForeignKey("DishFilterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MenuGenerator.Models.Entities.DishType.DishTypeEntity", "DishType")
                        .WithMany("DayMenus")
                        .HasForeignKey("DishTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DishFilter");

                    b.Navigation("DishType");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.MenuGeneratorTemplateEntity", b =>
                {
                    b.OwnsMany("MenuGenerator.Models.Entities.MenuTemplate.OrderedDayMenuTemplateEntity", "_dayTemplates", b1 =>
                        {
                            b1.Property<Guid>("MenuGeneratorTemplateId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Order")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<Guid>("DayMenuTemplateId")
                                .HasColumnType("TEXT");

                            b1.HasKey("MenuGeneratorTemplateId", "Order");

                            b1.HasIndex("DayMenuTemplateId");

                            b1.ToTable("OrderedDayMenuTemplateEntity");

                            b1.HasOne("MenuGenerator.Models.Entities.MenuTemplate.DayMenuTemplateEntity", "DayMenuTemplateEntity")
                                .WithMany()
                                .HasForeignKey("DayMenuTemplateId")
                                .OnDelete(DeleteBehavior.Cascade)
                                .IsRequired();

                            b1.WithOwner()
                                .HasForeignKey("MenuGeneratorTemplateId");

                            b1.Navigation("DayMenuTemplateEntity");
                        });

                    b.Navigation("_dayTemplates");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.DishType.DishTypeEntity", b =>
                {
                    b.Navigation("DayMenus");

                    b.Navigation("DishList");
                });

            modelBuilder.Entity("MenuGenerator.Models.Entities.MenuTemplate.DayMenuTemplateEntity", b =>
                {
                    b.Navigation("DishTypeList");
                });
#pragma warning restore 612, 618
        }
    }
}
